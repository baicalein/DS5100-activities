[
  {
    "objectID": "activities/M02-01-Activity-Hello-World.html",
    "href": "activities/M02-01-Activity-Hello-World.html",
    "title": "Activity: Hello, World!",
    "section": "",
    "text": "In this activity, you will run Python from the command line and become acquainted with its most basic mode of operation.\nTo get started, log onto the Rivanna shell and move into in the course directory you created for this class.\n\n\nOnce you are in Rivanna, you will want to know which version of Python you have installed as the default.\nTo find out, from the command line type:\nwhich python\nThis will show you the “path” to a python interpreter. For example:\n\nIf you do not see “anaconda” in that path, then run the following command:\nmodule load anaconda\nThis will update your environment to use Anaconda’s distribution of Python.\nAfter running the command, enter the command to see which pythion is being used to confirm that it is the one from Ancaconda.\n\n\n\nNote that you can use module to run other programs on your Rivanna account.\nType module list to see which programs have already been installed on your account.\nType module spider to see all the programs you can install.\n\n\n\nFrom the command line, enter python\nYou should get the Python Shell:\n\nThis is also called the Python standard REPL, which stands for “Read-Eval-Print Loop”.\nMake sure you see that you are using version 3 of Python.\nIf you see Python 2, exit the shell by entering quit() and try again by entering python3 at the command line.\nAt the &gt;&gt;&gt; prompt type print(\"Hello, World!\") and press return.\nIf you’ve never used Python, you’ve just completed an important ritual. If you have used Python, well, you did it again :-)\n\n\n\nNow, enter following line at the prompt and press return:\nimport this\nWhat do you see?\nTo exit the Python Shell, enter quit() or exit() and hit return.\n\n\n\nNow create a file called hello.py using the command line editor nano. Enter the same commands you used above.\nThen run it from the command line by directly invoking the Python interpreter python.",
    "crumbs": [
      "M02",
      "Activity: Hello, World!"
    ]
  },
  {
    "objectID": "activities/M02-01-Activity-Hello-World.html#which-python",
    "href": "activities/M02-01-Activity-Hello-World.html#which-python",
    "title": "Activity: Hello, World!",
    "section": "",
    "text": "Once you are in Rivanna, you will want to know which version of Python you have installed as the default.\nTo find out, from the command line type:\nwhich python\nThis will show you the “path” to a python interpreter. For example:\n\nIf you do not see “anaconda” in that path, then run the following command:\nmodule load anaconda\nThis will update your environment to use Anaconda’s distribution of Python.\nAfter running the command, enter the command to see which pythion is being used to confirm that it is the one from Ancaconda.",
    "crumbs": [
      "M02",
      "Activity: Hello, World!"
    ]
  },
  {
    "objectID": "activities/M02-01-Activity-Hello-World.html#aside",
    "href": "activities/M02-01-Activity-Hello-World.html#aside",
    "title": "Activity: Hello, World!",
    "section": "",
    "text": "Note that you can use module to run other programs on your Rivanna account.\nType module list to see which programs have already been installed on your account.\nType module spider to see all the programs you can install.",
    "crumbs": [
      "M02",
      "Activity: Hello, World!"
    ]
  },
  {
    "objectID": "activities/M02-01-Activity-Hello-World.html#the-python-interactive-shell",
    "href": "activities/M02-01-Activity-Hello-World.html#the-python-interactive-shell",
    "title": "Activity: Hello, World!",
    "section": "",
    "text": "From the command line, enter python\nYou should get the Python Shell:\n\nThis is also called the Python standard REPL, which stands for “Read-Eval-Print Loop”.\nMake sure you see that you are using version 3 of Python.\nIf you see Python 2, exit the shell by entering quit() and try again by entering python3 at the command line.\nAt the &gt;&gt;&gt; prompt type print(\"Hello, World!\") and press return.\nIf you’ve never used Python, you’ve just completed an important ritual. If you have used Python, well, you did it again :-)",
    "crumbs": [
      "M02",
      "Activity: Hello, World!"
    ]
  },
  {
    "objectID": "activities/M02-01-Activity-Hello-World.html#try-this",
    "href": "activities/M02-01-Activity-Hello-World.html#try-this",
    "title": "Activity: Hello, World!",
    "section": "",
    "text": "Now, enter following line at the prompt and press return:\nimport this\nWhat do you see?\nTo exit the Python Shell, enter quit() or exit() and hit return.",
    "crumbs": [
      "M02",
      "Activity: Hello, World!"
    ]
  },
  {
    "objectID": "activities/M02-01-Activity-Hello-World.html#running-python-files",
    "href": "activities/M02-01-Activity-Hello-World.html#running-python-files",
    "title": "Activity: Hello, World!",
    "section": "",
    "text": "Now create a file called hello.py using the command line editor nano. Enter the same commands you used above.\nThen run it from the command line by directly invoking the Python interpreter python.",
    "crumbs": [
      "M02",
      "Activity: Hello, World!"
    ]
  },
  {
    "objectID": "activities/M01_SurveyResponses.html",
    "href": "activities/M01_SurveyResponses.html",
    "title": "DS 5100 Activities",
    "section": "",
    "text": "import pandas as pd\n\nReplace file name value for src_file with downloaded CSV from online form.\n\nsrc_file = \"survey.csv\" \ndf = pd.read_csv(src_file).dropna(axis=1)\n\n\nN = len(df)\n\n\nN\n\n25\n\n\n\ndf.value_counts('Python')\n\nPython\nBeginner         16\nInter-mediate     8\nAdvanced          1\nName: count, dtype: int64\n\n\n\ndf.columns = \"id start end email name degree paid python r matlab java sql os enjoy javascript\".split()\n\n\n# df\n\n\nG = df.groupby('python')\n\n\nA = G.get_group(\"Advanced\")\n\n\nI = G.get_group(\"Inter-mediate\")\n\n\nB = G.get_group(\"Beginner\")\n\n\ncols = [3,4,5,6]\n\n\nA\n\n\n\n\n\n\n\n\n\nid\nstart\nend\nemail\nname\ndegree\npaid\npython\nr\nmatlab\njava\nsql\nos\nenjoy\njavascript\n\n\n\n\n2\n3\n1/17/24 18:43:15\n1/17/24 18:45:10\nuts4gf@virginia.edu\nOlivia Kantor\nHumanities;\nYes\nAdvanced\nBeginner\nBeginner\nBeginner\nInter-mediate\nMacOS\nYes\nBeginner\n\n\n\n\n\n\n\n\n\nA.iloc[:, cols]\n\n\n\n\n\n\n\n\n\nemail\nname\ndegree\npaid\n\n\n\n\n2\nuts4gf@virginia.edu\nOlivia Kantor\nHumanities;\nYes\n\n\n\n\n\n\n\n\n\nI.iloc[:, cols]\n\n\n\n\n\n\n\n\n\nemail\nname\ndegree\npaid\n\n\n\n\n0\nia5qk@virginia.edu\nIsha Anand\nHumanities;\nNo\n\n\n6\nkvu2et@virginia.edu\nTrenton Ribbens\nEngineering;\nNo\n\n\n8\ndb5kb@virginia.edu\nDavid Baisas\nUnlisted STEM;\nYes\n\n\n10\ndss2q@virginia.edu\nDaniel Stornetta\nHumanities;\nNo\n\n\n13\ndfe2zj@virginia.edu\nVenkat Viswanathan\nEngineering;\nYes\n\n\n15\nycv3fh@virginia.edu\nClarissa Benitez\nMath;\nNo\n\n\n20\ntar3kh@virginia.edu\nTimothy Rodriguez\nSocial Science;\nYes\n\n\n23\nqfw3cr@virginia.edu\nVictor Ontiveros\nComputer Science;\nYes\n\n\n\n\n\n\n\n\n\nB.iloc[:, cols]\n\n\n\n\n\n\n\n\n\nemail\nname\ndegree\npaid\n\n\n\n\n1\nuwa6xv@virginia.edu\nAlanna Hazlett\nNatural Science;\nNo\n\n\n3\nnzt3px@virginia.edu\nThanh Doan\nStatistics;Social Science;\nNo\n\n\n4\nfxj5fe@virginia.edu\nDavid Hernandez\nSocial Science;\nNo\n\n\n5\nzsf9pd@virginia.edu\nVicky Singh\nEngineering;\nYes\n\n\n7\nbdg5g@virginia.edu\nBrady Genz\nComputer Science;Math;Engineering;\nNo\n\n\n9\nrcs2mh@virginia.edu\nEtienne Jimenez\nMath;\nNo\n\n\n11\nnge4py@virginia.edu\nChristian Ollen\nUnlisted STEM;\nNo\n\n\n12\nctx8bn@virginia.edu\nIsabella Paolucci\nNatural Science;\nNo\n\n\n14\nvun4kt@virginia.edu\nElisa de la Vega Ricardo\nUnlisted STEM;\nYes\n\n\n16\ncbv6gd@virginia.edu\nDevlin Bridges\nMath;\nYes\n\n\n17\nsck4jh@virginia.edu\nSam Knisely\nStatistics;Unlisted Non-STEM;\nYes\n\n\n18\ncdw7dr@virginia.edu\nChristopher Wikoff\nSocial Science;\nNo\n\n\n19\netk3pu@virginia.edu\nAlec Pixton\nUnlisted STEM;\nNo\n\n\n21\nfyb7sx@virginia.edu\nEmmanuel Leonce\nEngineering;\nNo\n\n\n22\nki5rb@virginia.edu\nKarunya Iyappan\nHumanities;Social Science;\nNo\n\n\n24\nesa5ch@virginia.edu\nEric Arnold\nEngineering;Humanities;\nNo\n\n\n\n\n\n\n\n\n\nB.value_counts('degree').plot.pie();\n\n\n\n\n\n\n\n\n\nI.value_counts('degree').plot.pie();"
  },
  {
    "objectID": "activities/M01-01-Using-Rivanna.html",
    "href": "activities/M01-01-Using-Rivanna.html",
    "title": "Activity: Using Rivanna",
    "section": "",
    "text": "Activity: Using Rivanna\n\n\n\n\n\n\nGoal: Create your course directory structure on Rivanna.\n\n\n\nAfter reading the previous documents on Rivanna and Unix, try this activity to get acquainted with the Rivanna high-performance computing cluster at UVA.\nTo get started, go to OpenOnDemand Dashboard page and from the main menu select Clusters → Rivanna Shell Access.\nThis should open a terminal to what is called the “shell” of the operating system.\n\n\n\nScreenshot of Rivanna shell\n\n\nRivanna uses Linux, a member of the Unix family of operating systems. Many cloud resources use Linux.\nUnderstanding how to do work from the command line on such systems is an essential skill of the data scientist.\nIf you have never used the command line, have no fear! Just enter the commands exactly as shown and ask questions in the Teams chat if you are stuck.\nNow, create a directory for your course and this course by entering the following commands:\ncd Documents \nmdkir MSDS \ncd MSDS \nmkdir DS5100 \ncd DS5100\nIf the Documents directory does not exist, create that first using the mkdir command.\n\ncd means “change directory,” and is a basic Unix command.\nmkdir means “make directory.” It’s also a basic Unix command.\n\nNote that you can use the tab key to complete path and command names as you type.\nYou don’t have to, but it would be a good idea to create subdirectories for any of your courses that use Rivanna.\nMore information about Unix shell commands can be found the document Unix Shell Commands.",
    "crumbs": [
      "M01",
      "Activity: Using Rivanna"
    ]
  },
  {
    "objectID": "activities/M01_ImportHello.html",
    "href": "activities/M01_ImportHello.html",
    "title": "Hello Exercise",
    "section": "",
    "text": "Students fork and clone the course repo, then create a file in a specified directory of their local repo.\nAfter that they push it to the remote and then initiate a pull request.\nThese requests are merged and then pulled locally here.\nThe results are aggregated and printed below.\n\nimport glob\nimport pandas as pd\n\n\ndata = []\nfiles = glob.glob(\"./hello/*_*.txt\")\n\n\nfiles[0]\n\n'./hello/hm7qgr_hello.txt'\n\n\n\nprint(len(files))\n\n18\n\n\n\nn_students = 67\n\n\nn_students - len(files)\n\n49\n\n\n\nfor i, file in enumerate(files):\n    sid = file.split(\"/\")[2].split(\"_\")[0]\n    line = open(file, 'r').read().strip()\n    row = (sid, line.replace('\\n', ' '))\n    data.append(row)\n\n\ndata\n\n[('hm7qgr',\n  'I recently watched Inside Out 2 with a friend and enjoyed it since it had been a while since the first movie came out and the movie touched on the emotion, anxiety.'),\n ('vsr9awc',\n  'The most recent film that I watched and enjoyed was Little Women. I watched it on the plane to Italy!'),\n ('rpk3ve', 'The most recent film I watched and enjoyed is Exhuma.'),\n ('twf9xn',\n  'Question: In the file, introduce yourself by answering the question: What is the most recent film you watched and enjoyed? Answer: Lover Come Back (1962)'),\n ('mhe3sy',\n  'What is the most recent film you watched and enjoyed?  Most recently I watched an Indian movie called Srikanth, a story of blind man from poor family who became a successful business.'),\n ('zh2yn', 'The last movie I watched was \"Mission Impossible: Rogue Nation\"'),\n ('mm3dc', 'The most recent film I watched was Crew.'),\n ('bmw8pt',\n  'Q: What is the most recent film you watched and enjoyed?  A: Dune Part 2'),\n ('epx8hh',\n  \"Created a new file with nano! Hello! A recent movie I watched was a horror movie and I can't recall the name!\"),\n ('dnb7rz', 'Ghostbusters - Frozen Empire.  Fun mainstream movie.'),\n ('bnolton',\n  \"Hello, my name is Brian Nolton. I have a daughter who is almost 1 so I have not watched much of anything lately. I guess I'll say 'The Beekeeper.' I only watched that becuase I had time on an airplane...\"),\n ('sc8rg', 'The last film I watched was the horror/thriller movie Smile'),\n ('rzq2rk',\n  'The most recent film I watched and enjoyed is Shang-Chi and the Legend of the Ten Rings.'),\n ('ywe4kw',\n  \"Hello! I've recently been watching through House of the Dragon. I'm about to finish season 1!\"),\n ('bat7kt',\n  'I recently watched Jurassic Park, the original. Just as good as I remember it from years ago. Jeff Goldblum is, uhh, INCREDIBLE.'),\n ('nwiradiradja',\n  'The most recent film I watched and enjoyed was Now you see me 2'),\n ('cej2vh',\n  \"The most recent film I watched and enjoyed was a rewatch of Robert Zemeckis's 1992 classic, Death Becomes Her.\"),\n ('wpl3a', 'I have not seen a film recently.')]\n\n\n\ndf = pd.DataFrame(data, columns=['user_id','comment'])\n\n\ndf.head()\n\n\n\n\n\n\n\n\n\nuser_id\ncomment\n\n\n\n\n0\nhm7qgr\nI recently watched Inside Out 2 with a friend ...\n\n\n1\nvsr9awc\nThe most recent film that I watched and enjoye...\n\n\n2\nrpk3ve\nThe most recent film I watched and enjoyed is ...\n\n\n3\ntwf9xn\nQuestion: In the file, introduce yourself by a...\n\n\n4\nmhe3sy\nWhat is the most recent film you watched and e...\n\n\n\n\n\n\n\n\n\ndf.to_csv(\"movies.csv\")\n\n\nfor i, r in enumerate(df.user_id + ' | ' + df.comment):\n    print(str(i).zfill(2), \"| \" + r)\n\n00 | hm7qgr | I recently watched Inside Out 2 with a friend and enjoyed it since it had been a while since the first movie came out and the movie touched on the emotion, anxiety.\n01 | vsr9awc | The most recent film that I watched and enjoyed was Little Women. I watched it on the plane to Italy!\n02 | rpk3ve | The most recent film I watched and enjoyed is Exhuma.\n03 | twf9xn | Question: In the file, introduce yourself by answering the question: What is the most recent film you watched and enjoyed? Answer: Lover Come Back (1962)\n04 | mhe3sy | What is the most recent film you watched and enjoyed?  Most recently I watched an Indian movie called Srikanth, a story of blind man from poor family who became a successful business.\n05 | zh2yn | The last movie I watched was \"Mission Impossible: Rogue Nation\"\n06 | mm3dc | The most recent film I watched was Crew.\n07 | bmw8pt | Q: What is the most recent film you watched and enjoyed?  A: Dune Part 2\n08 | epx8hh | Created a new file with nano! Hello! A recent movie I watched was a horror movie and I can't recall the name!\n09 | dnb7rz | Ghostbusters - Frozen Empire.  Fun mainstream movie.\n10 | bnolton | Hello, my name is Brian Nolton. I have a daughter who is almost 1 so I have not watched much of anything lately. I guess I'll say 'The Beekeeper.' I only watched that becuase I had time on an airplane...\n11 | sc8rg | The last film I watched was the horror/thriller movie Smile\n12 | rzq2rk | The most recent film I watched and enjoyed is Shang-Chi and the Legend of the Ten Rings.\n13 | ywe4kw | Hello! I've recently been watching through House of the Dragon. I'm about to finish season 1!\n14 | bat7kt | I recently watched Jurassic Park, the original. Just as good as I remember it from years ago. Jeff Goldblum is, uhh, INCREDIBLE.\n15 | nwiradiradja | The most recent film I watched and enjoyed was Now you see me 2\n16 | cej2vh | The most recent film I watched and enjoyed was a rewatch of Robert Zemeckis's 1992 classic, Death Becomes Her.\n17 | wpl3a | I have not seen a film recently.",
    "crumbs": [
      "M01",
      "Hello Exercise"
    ]
  },
  {
    "objectID": "activities/M01-02-Activity-GitHub.html",
    "href": "activities/M01-02-Activity-GitHub.html",
    "title": "Activity: Using Git and GitHub",
    "section": "",
    "text": "Goal: Use Git and GitHub to put course materials on your Rivanna account.\n\n\n\nIn this activity, you will go through steps of using Git and GitHub covered in the reading on GitHub. At this point, you also should be able check off the following items:\n\nUnderstand the difference between Git and GitHub.\nUnderstand the purpose of Git and Github for data science work.\nEnsure Git is installed on your computer.\nUnderstand how to find a repository on GitHub.\n\nLet’s apply and extend this knowledge now with our course repo.\nBe sure you are inside the course directory on Rivanna we created earlier.\nWe assume you have already created a GitHub account.\nAlso, before you get started, follow these instructions to set an SSH key. You can create this on both your computer and Rivanna, but for the assignment you need only create it on Rivanna.\n\n\nFork the course GitHub hosted repository (“repo”) to your GitHub account.\nGo to https://github.com/ontoligent/DS5100-activities in your web browser.\n\n\n\n\n\n\nNote\n\n\n\nThis is the course activities repo — it will be used for activities and answer keys.\n\n\nClick on the Fork icon in the upper right and follow the prompts to finish the process.\nYou should end up at the web page of your newly forked repo.\nYou will now have a copy of the repo in your GitHub account.\nClone the forked repo for this course inside of your course directory on Rivanna.\nFind the green Code button and click on it. You should see something like this:\n\nMake sure you have selected the SSH option.\n\n\n\n\n\n\nImportant\n\n\n\nNote: This requires that you have SSH set up.\n\n\nThen click on the copy icon and paste the value into the following command:\ngit clone git@github.com:&lt;github_user_name&gt;/DS5100-activities.git\ng\n\n\n\n\n\n\nImportant\n\n\n\nBe sure to clone the repo from your GitHub account, replacing &lt;github_user_name&gt; with your GitHub user name. Do not just cut-and-paste the line above!\n\n\nYou now have a copy the course repo to your account on Rivanna.\nThis will be the directory you created in your pre-class activities under Documents/.\nCreate a new file in your newly cloned repo.\nGo to your command line window on Rivanna.\nUse cd to move into the directory just created by the clone operation.\nMove into the directory activities/hello\n\n\n\n\n\n\nImportant\n\n\n\nMake sure you are in this directory before proceeding.\n\n\nIf you get lost – for example if you moved around the file system before this step – you can cd to the absolute path:\ncd ~/Documents/MSDS/DS5100/DS5100-activities/activities/hello \nNote that the tilde sign ~ stands for the path to your home directory.\nUsing the file editor on Rivanna, create and save new file called &lt;userid&gt;_hello.txt, replacing &lt;userid&gt; with your actual user ID, e.g. rca2t_hello.txt.\nIn the file, introduce yourself by answering the question: What is the most recent film you watched and enjoyed?\nSave the file.\nAdd and commit the changes you made.\nNow do the following:\ngit add &lt;userid&gt;_hello.txt\ngit commit -m \"Created file for class\"\nPush your new file to the repo on GitHub.\nSince you have SSH set up, you can issue the following command without having to enter a password:\n\ngit push\n\nCreate a Pull Request\nFinally, make a pull request to have your file added to the original site. To do this, follow these steps:\nClick on the “Pull requests” menu item (see image below) on the web page for your repo.\n\n\n\nImage of pull request button on GitHub\n\n\nClick on the green “New pull request” button.\nClick on the green “Create pull request” button.\nGive the request the title “In-class activity” and then press the green “Create pull request” button at the bottom of the form.\nNow the ball is in the instructor’s court to merge the request with the original. If you put your file in the right place and named it properly, it will be merged.\n\n\n\nDuring the semester, you will not be making pull requests to submit your work. We do it here to demonstrate the concept since it is so basic to working with GitHub in the real world.\nInstead of making pull requests, you will be using a separate repository for your work So, you will be working with two repositories going forard:\n\nThe Course Activities Repo, which is where you will find homework keys and exercises after the classes in which they are used. Update as necessary. We will also use this for some of the activities from the first modules.\nYour Assessments Repo, which is where you will put your finished work as assigned.\nThe Book Repo, which is where you will find the textbook for this course along with all of the notebooks in it. You may choose to clone or fork this, or you may download individual notebooks from the site as needed.",
    "crumbs": [
      "M01",
      "Activity: Using Git and GitHub"
    ]
  },
  {
    "objectID": "activities/M01-02-Activity-GitHub.html#steps",
    "href": "activities/M01-02-Activity-GitHub.html#steps",
    "title": "Activity: Using Git and GitHub",
    "section": "",
    "text": "Fork the course GitHub hosted repository (“repo”) to your GitHub account.\nGo to https://github.com/ontoligent/DS5100-activities in your web browser.\n\n\n\n\n\n\nNote\n\n\n\nThis is the course activities repo — it will be used for activities and answer keys.\n\n\nClick on the Fork icon in the upper right and follow the prompts to finish the process.\nYou should end up at the web page of your newly forked repo.\nYou will now have a copy of the repo in your GitHub account.\nClone the forked repo for this course inside of your course directory on Rivanna.\nFind the green Code button and click on it. You should see something like this:\n\nMake sure you have selected the SSH option.\n\n\n\n\n\n\nImportant\n\n\n\nNote: This requires that you have SSH set up.\n\n\nThen click on the copy icon and paste the value into the following command:\ngit clone git@github.com:&lt;github_user_name&gt;/DS5100-activities.git\ng\n\n\n\n\n\n\nImportant\n\n\n\nBe sure to clone the repo from your GitHub account, replacing &lt;github_user_name&gt; with your GitHub user name. Do not just cut-and-paste the line above!\n\n\nYou now have a copy the course repo to your account on Rivanna.\nThis will be the directory you created in your pre-class activities under Documents/.\nCreate a new file in your newly cloned repo.\nGo to your command line window on Rivanna.\nUse cd to move into the directory just created by the clone operation.\nMove into the directory activities/hello\n\n\n\n\n\n\nImportant\n\n\n\nMake sure you are in this directory before proceeding.\n\n\nIf you get lost – for example if you moved around the file system before this step – you can cd to the absolute path:\ncd ~/Documents/MSDS/DS5100/DS5100-activities/activities/hello \nNote that the tilde sign ~ stands for the path to your home directory.\nUsing the file editor on Rivanna, create and save new file called &lt;userid&gt;_hello.txt, replacing &lt;userid&gt; with your actual user ID, e.g. rca2t_hello.txt.\nIn the file, introduce yourself by answering the question: What is the most recent film you watched and enjoyed?\nSave the file.\nAdd and commit the changes you made.\nNow do the following:\ngit add &lt;userid&gt;_hello.txt\ngit commit -m \"Created file for class\"\nPush your new file to the repo on GitHub.\nSince you have SSH set up, you can issue the following command without having to enter a password:\n\ngit push\n\nCreate a Pull Request\nFinally, make a pull request to have your file added to the original site. To do this, follow these steps:\nClick on the “Pull requests” menu item (see image below) on the web page for your repo.\n\n\n\nImage of pull request button on GitHub\n\n\nClick on the green “New pull request” button.\nClick on the green “Create pull request” button.\nGive the request the title “In-class activity” and then press the green “Create pull request” button at the bottom of the form.\nNow the ball is in the instructor’s court to merge the request with the original. If you put your file in the right place and named it properly, it will be merged.",
    "crumbs": [
      "M01",
      "Activity: Using Git and GitHub"
    ]
  },
  {
    "objectID": "activities/M01-02-Activity-GitHub.html#going-forward",
    "href": "activities/M01-02-Activity-GitHub.html#going-forward",
    "title": "Activity: Using Git and GitHub",
    "section": "",
    "text": "During the semester, you will not be making pull requests to submit your work. We do it here to demonstrate the concept since it is so basic to working with GitHub in the real world.\nInstead of making pull requests, you will be using a separate repository for your work So, you will be working with two repositories going forard:\n\nThe Course Activities Repo, which is where you will find homework keys and exercises after the classes in which they are used. Update as necessary. We will also use this for some of the activities from the first modules.\nYour Assessments Repo, which is where you will put your finished work as assigned.\nThe Book Repo, which is where you will find the textbook for this course along with all of the notebooks in it. You may choose to clone or fork this, or you may download individual notebooks from the site as needed.",
    "crumbs": [
      "M01",
      "Activity: Using Git and GitHub"
    ]
  },
  {
    "objectID": "activities/M02-02-Activity-JupyterLab-on-Rivanna.html",
    "href": "activities/M02-02-Activity-JupyterLab-on-Rivanna.html",
    "title": "Activity: Jupyter Lab",
    "section": "",
    "text": "Activity: Jupyter Lab\nNow that we have run Python on Rivanna from the command line, let’s try it using a Jupyter Notebook.\nGo the OnDemand site to access Rivanna. As a reminder, the URL is https://rivanna-portal.hpc.virginia.edu/.\nFrom the Interactive Apps menu, select JupyterLab and fill out the form to initiate a new session. Your form should have the following values:\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nNote that you may increase the number of hours, cores, and megabytes of RAM, but asking for too much will increase the time it takes to start your session. So select just the resources needed and enter our course allocation msds_ds5100 if this value is different than in the image above).\n\n\nOnce the session is ready, launch the notebook.\nOnce you are in the notebook, use file system tab on the left to get to the directory of your personal assessments repo. Remember, you created two repos for this class — one for course content from the instructor, and one for your own course work. Use the latter for this exercise.\nIn a code cell in the notebook, enter the code to print \"Hello, World!\", and run the cell.\nSave your notebook as hello-world.ipynb.",
    "crumbs": [
      "M02",
      "Activity: Jupyter Lab"
    ]
  }
]